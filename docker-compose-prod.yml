
services:
  symfony:
    build:
      context: ./
      dockerfile: Dockerfile-backend
    volumes:
      - symfony_code:/var/www/symfony
    environment:
      DB_HOST: ${DB_HOST}
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@database:3306/${MYSQL_DATABASE}
      DATABASE_URL_CONSOLE: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@database:3306/${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "9001:9000"
    networks:
      - symfony-angular-network
    depends_on:
      database:
        condition: service_healthy
    entrypoint: /usr/local/bin/entrypoint.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000", "pidof", "php-fpm"]
      interval: 20s
      timeout: 10s
      retries: 3

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - my_sqldata:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init script
    networks:
      - symfony-angular-network
    ports:
      - "3306:3306"  # Ensure this line exists
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "database", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    build:
      context: ./
      dockerfile: Dockerfile-nginx
    ports:
      - "8000:80"  # For HTTP
      - "4444:443"  # For HTTPS
    volumes:
      - symfony_code:/var/www/symfony
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./frontend/ssl:/etc/nginx/ssl
      - angular_dist:/var/www/symfony/public # Angular build output
      - ./letsencrypt/certbot:/etc/letsencrypt
    networks:
      - symfony-angular-network
    depends_on:
      - symfony

  # certbot:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-letsencrypt
  #   container_name: certbot
  #   volumes:
  #     - ./letsencrypt/certbot:/etc/letsencrypt
  #     - ./letsencrypt-entrypoint.sh:/usr/local/bin/letsencrypt-entrypoint.sh
  #     - angular_dist:/var/www/html   # Correct volume for challenge responses
  #   entrypoint: /usr/local/bin/renewal.sh
  #   networks:
  #     - symfony-angular-network
  #   depends_on:
  #     - nginx

networks:
  symfony-angular-network:
    driver: bridge

volumes:
  symfony_code:
  angular_dist:
  my_sqldata:
