# Stage 1: Build
FROM node:18 AS builder

USER root

# Set the working directory
WORKDIR /app

# Verify Node.js and npm versions
RUN node -v
RUN npm -v

# Copy package.json and package-lock.json
COPY frontend/package*.json ./

# Clean up existing node_modules and npm cache
RUN rm -rf node_modules && npm cache clean --force

# Install a specific version of npm
RUN npm install -g npm@10.8.3

# Install project dependencies
RUN npm ci

# Install Angular CLI globally
RUN npm install -g @angular/cli@16.2.1

# Copy the rest of the application
COPY frontend/ ./

# Remove old dist folder if it exists
RUN rm -rf /app/dist

# Build the Angular app
RUN npm run build --omit=dev --output-path=dist/browser

# Stage 2: Serve with Nginx
FROM nginx:1.19-alpine

# Install system dependencies and tools
RUN apk update && apk add --no-cache dos2unix

# Remove default Nginx content
RUN rm -rf /var/www/angular/dist/*

# Copy Angular build output to a temporary directory
COPY --from=builder /app/dist/browser /tmp/angular-build

# Copy custom file merging script
COPY frontend/merge-files.sh /usr/local/bin/merge-files.sh
RUN chmod +x /usr/local/bin/merge-files.sh
RUN dos2unix /usr/local/bin/merge-files.sh

# Run the file merging script
RUN sh /usr/local/bin/merge-files.sh

# Copy built files from the builder stage
COPY --from=builder /app/dist/browser /var/www/angular/dist

RUN mkdir -p /var/www/symfony/public

# Copy custom Nginx configuration file
COPY nginx.conf /etc/nginx/nginx.conf

# Copy SSL certificates
COPY frontend/ssl/server.crt /etc/nginx/ssl/server.crt
COPY frontend/ssl/server.key /etc/nginx/ssl/server.key

# Set permissions for SSL certificates
RUN chmod 600 /etc/nginx/ssl/server.key \
    && chmod 644 /etc/nginx/ssl/server.crt

# Expose ports
EXPOSE 80
EXPOSE 443

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
